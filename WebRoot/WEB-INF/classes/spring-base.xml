<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!--db.properties 导入 第三方 配置文件 -->
	<context:property-placeholder
		location="classpath:db.properties" />
	<!-- 开启SpringIOC 注解功能 并 指定扫描器扫描范围 -->
	<context:component-scan base-package="com.jiaming" />
	<!-- 织入增强： 有的时候 AutoWired 注入 不成功 。 -->
	<!--实质 ： 使用ciglib动态代理 来实现AOP部分 开启了Spring AOP 注解功能。 -->
	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
	<!-- 配置 数据源 -->
	<bean class="com.alibaba.druid.pool.DruidDataSource"
		id="dataSource">
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="url" value="${jdbc.url}" />
		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
	</bean>
	<!-- 创建 Spring 全局事务管理器对象 IOC 瓶子里 -->
	<bean
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"

		id="transactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 配置 Spring 全局事务管理 AOP的部分 -->
	<!-- 配置增强 -->
	<tx:advice id="advice1"
		transaction-manager="transactionManager">
		<tx:attributes>
			<!-- <tx:method name="*" propagation="REQUIRED" /> -->
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="change*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="show*" read-only="true" />
			<tx:method name="select*" read-only="true" />

		</tx:attributes>
	</tx:advice>
	<!-- 配置 切点 ，+增强的部分 配置 切面 -->
	<aop:config>
		<!-- 切点 -->
		<aop:pointcut
			expression="execution(* com.jiaming.*.service.*.*(..))" id="cut1" />
		<!-- 指定 增强 -->
		<aop:advisor pointcut-ref="cut1" advice-ref="advice1" />
	</aop:config>

	<!-- 整合 Spring 和 Mybatis -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis.xml" />
	</bean>
	<!-- 手动去写 XxxMapperImpl -->
	<!--全自动 创建了所有接口 XxxMapper.java 的 对应的 代理对象 -->
	<!-- StudentMappper mapper = session.getMapper(StudentMapper.class) -->
	<!-- 前提 接口 和 映射文件 名字相同 -->
	<mybatis-spring:scan base-package="com.jiaming.mapper" />

</beans>